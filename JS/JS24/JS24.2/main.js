let choice;
let arr = [];
do {
    choice = parseInt(prompt(`
================ MENU ================
1Ô∏è‚É£  Nh·∫≠p m·∫£ng s·ªë nguy√™n
2Ô∏è‚É£  Hi·ªÉn th·ªã m·∫£ng
3Ô∏è‚É£  T√¨m c√°c ph·∫ßn t·ª≠ ch·∫µn v√† l·∫ª
4Ô∏è‚É£  T√≠nh trung b√¨nh c·ªông c·ªßa m·∫£ng
5Ô∏è‚É£  X√≥a ph·∫ßn t·ª≠ t·∫°i v·ªã tr√≠ ch·ªâ ƒë·ªãnh
6Ô∏è‚É£  T√¨m ph·∫ßn t·ª≠ l·ªõn th·ª© hai trong m·∫£ng
7Ô∏è‚É£  ‚ùå Tho√°t
=========================================
üîπ Vui l√≤ng nh·∫≠p s·ªë t∆∞∆°ng ·ª©ng v·ªõi l·ª±a ch·ªçn c·ªßa b·∫°n:`));
switch(choice)
{
    case 1:
    {
        let n = parseInt(prompt("Nh·∫≠p s·ªë l∆∞·ª£ng ph·∫ßn t·ª≠:"));
        if (isNaN(n) || n < 1) {
            alert("S·ªë l∆∞·ª£ng ph·∫ßn t·ª≠ kh√¥ng h·ª£p l·ªá!");
            break;
        }
        arr = [];
        for (let i = 0; i < n; i++) {
            let num = parseInt(prompt(`Nh·∫≠p s·ªë th·ª© ${i + 1}:`));
            arr.push(num);
        }
        alert(`M·∫£ng ƒë√£ nh·∫≠p: ${arr.join(", ")}`);
        break;
    }
    case 2:
    {
        alert(`C√°c ph·∫ßn t·ª≠ trong m·∫£ng: ${arr.length ? arr.join(", ") : "M·∫£ng tr·ªëng"}`);
        break;
    }
    case 3:
    {
        if (arr.length === 0) {
            alert("M·∫£ng tr·ªëng!");
            break;
        }
        let evenNumbers = arr.filter(num => num % 2 === 0);
        let oddNumbers = arr.filter(num => num % 2 !== 0);
        alert(`C√°c s·ªë ch·∫µn: ${evenNumbers.length ? evenNumbers.join(", ") : "Kh√¥ng c√≥ s·ªë ch·∫µn"}\nC√°c s·ªë l·∫ª: ${oddNumbers.length ? oddNumbers.join(", ") : "Kh√¥ng c√≥ s·ªë l·∫ª"}`);
        break;
    }
    case 4:
    {
        if (arr.length === 0) {
            alert("M·∫£ng tr·ªëng!");
            break;
        }
        let sum = 0;
        arr.forEach(num => sum += num);
        let avg = sum / arr.length;
        alert(`Trung b√¨nh c·ªông c·ªßa m·∫£ng: ${avg}`);
        break;
    }
    case 5:
    {
        if (arr.length === 0) {
            alert("M·∫£ng tr·ªëng!");
            break;
        }
        let index = parseInt(prompt("Nh·∫≠p v·ªã tr√≠ c·∫ßn x√≥a:"));
        if (isNaN(index) || index < 0 || index >= arr.length) {
            alert("V·ªã tr√≠ kh√¥ng h·ª£p l·ªá!");
            break;
        }
        arr.splice(index, 1);
        alert(`M·∫£ng sau khi x√≥a: ${arr.join(", ")}`);
        break;
    }
    case 6:
    {
        if (arr.length < 2) {
            alert("M·∫£ng kh√¥ng ƒë·ªß ph·∫ßn t·ª≠!");
            break;
        }
        let max = Math.max(...arr);
        let secondMax = arr.filter(num => num < max);
        secondMax = Math.max(...secondMax);
        alert(`Ph·∫ßn t·ª≠ l·ªõn th·ª© hai trong m·∫£ng: ${secondMax}`);
        break;
    }
    case 7:
    {
        alert("C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª•!");
        break;
    }
}
} while (choice !== 7);