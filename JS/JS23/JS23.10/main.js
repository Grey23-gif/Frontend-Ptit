let choice;
let arr = [];

do {
    choice = parseInt(prompt(`
================ MENU ================
1Ô∏è‚É£  Nh·∫≠p s·ªë ph·∫ßn t·ª≠ c·∫ßn nh·∫≠p v√† gi√° tr·ªã c√°c ph·∫ßn t·ª≠
2Ô∏è‚É£  In ra gi√° tr·ªã c√°c ph·∫ßn t·ª≠ ƒëang qu·∫£n l√Ω
3Ô∏è‚É£  In ra gi√° tr·ªã c√°c ph·∫ßn t·ª≠ ch·∫µn v√† t√≠nh t·ªïng
4Ô∏è‚É£  In ra gi√° tr·ªã l·ªõn nh·∫•t v√† nh·ªè nh·∫•t trong m·∫£ng
5Ô∏è‚É£  In ra c√°c ph·∫ßn t·ª≠ l√† s·ªë nguy√™n t·ªë trong m·∫£ng v√† t√≠nh t·ªïng
6Ô∏è‚É£  Nh·∫≠p v√†o m·ªôt s·ªë v√† th·ªëng k√™ s·ªë l·∫ßn xu·∫•t hi·ªán trong m·∫£ng
7Ô∏è‚É£  Th√™m m·ªôt ph·∫ßn t·ª≠ v√†o v·ªã tr√≠ ch·ªâ ƒë·ªãnh
8Ô∏è‚É£  ‚ùå Tho√°t
=========================================
üîπ Vui l√≤ng nh·∫≠p s·ªë t∆∞∆°ng ·ª©ng v·ªõi l·ª±a ch·ªçn c·ªßa b·∫°n:`));

    switch (choice) {
        case 1: {
            let n = parseInt(prompt("Nh·∫≠p s·ªë l∆∞·ª£ng ph·∫ßn t·ª≠:"));
            if (isNaN(n) || n < 1) {
                alert("S·ªë l∆∞·ª£ng ph·∫ßn t·ª≠ kh√¥ng h·ª£p l·ªá!");
                break;
            }
            arr = [];
            for (let i = 0; i < n; i++) {
                let num = parseFloat(prompt(`Nh·∫≠p s·ªë th·ª© ${i + 1}:`));
                arr.push(num);
            }
            alert(`M·∫£ng ƒë√£ nh·∫≠p: ${arr.join(", ")}`);
            break;
        }

        case 2:
            alert(`C√°c ph·∫ßn t·ª≠ trong m·∫£ng: ${arr.length ? arr.join(", ") : "M·∫£ng tr·ªëng"}`);
            break;

        case 3: {
            let sum = 0;
            let evenNumbers = arr.filter(num => num % 2 === 0);
            evenNumbers.forEach(num => sum += num);
            alert(`C√°c s·ªë ch·∫µn: ${evenNumbers.length ? evenNumbers.join(", ") : "Kh√¥ng c√≥ s·ªë ch·∫µn"}\nT·ªïng: ${sum}`);
            break;
        }

        case 4: {
            if (arr.length === 0) {
                alert("M·∫£ng tr·ªëng!");
                break;
            }
            let max = Math.max(...arr);
            let min = Math.min(...arr);
            alert(`Gi√° tr·ªã l·ªõn nh·∫•t: ${max}\nGi√° tr·ªã nh·ªè nh·∫•t: ${min}`);
            break;
        }

        case 5: {
            let sumPrime = 0;
            let primeNumbers = arr.filter(num => {
                if (num < 2) return false;
                for (let j = 2; j <= Math.sqrt(num); j++) {
                    if (num % j === 0) return false;
                }
                return true;
            });
            primeNumbers.forEach(num => sumPrime += num);
            alert(`S·ªë nguy√™n t·ªë: ${primeNumbers.length ? primeNumbers.join(", ") : "Kh√¥ng c√≥ s·ªë nguy√™n t·ªë"}\nT·ªïng: ${sumPrime}`);
            break;
        }

        case 6: {
            let num = parseFloat(prompt("Nh·∫≠p s·ªë c·∫ßn th·ªëng k√™:"));
            let count = arr.filter(value => value === num).length;
            alert(`S·ªë ${num} xu·∫•t hi·ªán ${count} l·∫ßn trong m·∫£ng.`);
            break;
        }

        case 7: {
            let pos = parseInt(prompt("Nh·∫≠p v·ªã tr√≠ c·∫ßn th√™m:"));
            let value = parseFloat(prompt("Nh·∫≠p gi√° tr·ªã c·∫ßn th√™m:"));
            if (isNaN(pos) || pos < 0 || pos > arr.length) {
                alert("V·ªã tr√≠ kh√¥ng h·ª£p l·ªá!");
                break;
            }
            arr.splice(pos, 0, value);
            alert(`M·∫£ng sau khi th√™m ph·∫ßn t·ª≠: ${arr.join(", ")}`);
            break;
        }

        case 8:
            alert("Tho√°t ch∆∞∆°ng tr√¨nh!");
            break;

        default:
            alert("L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá! Vui l√≤ng nh·∫≠p t·ª´ 1 ƒë·∫øn 8.");
    }
} while (choice !== 8);
    