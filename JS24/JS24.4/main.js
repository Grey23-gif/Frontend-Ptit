let arr = [];
let choice;
do {
    choice = parseInt(prompt(`
================ MENU ================
1Ô∏è‚É£  Nh·∫≠p m·∫£ng 2 chi·ªÅu
2Ô∏è‚É£  Hi·ªÉn th·ªã m·∫£ng 2 chi·ªÅu
3Ô∏è‚É£  T√≠nh t·ªïng c√°c ph·∫ßn t·ª≠ trong m·∫£ng
4Ô∏è‚É£  T√¨m ph·∫ßn t·ª≠ l·ªõn nh·∫•t trong m·∫£ng v√† ch·ªâ s·ªë c·ªßa n√≥
5Ô∏è‚É£  T√≠nh trung b√¨nh c·ªông c√°c ph·∫ßn t·ª≠ c·ªßa m·ªôt h√†ng c·ª• th·ªÉ
6Ô∏è‚É£  ƒê·∫£o ng∆∞·ª£c c√°c h√†ng trong m·∫£ng
7Ô∏è‚É£  ‚ùå Tho√°t
=========================================
üîπ Vui l√≤ng nh·∫≠p s·ªë t∆∞∆°ng ·ª©ng v·ªõi l·ª±a ch·ªçn c·ªßa b·∫°n:`));
switch(choice)
{
    case 1:
    {
        let row = parseInt(prompt("Nh·∫≠p s·ªë h√†ng:"));
        let col = parseInt(prompt("Nh·∫≠p s·ªë c·ªôt:"));
        arr = [];
        for (let i = 0; i < row; i++) {
            arr[i] = [];
            for (let j = 0; j < col; j++) {
                let num = parseInt(prompt(`Nh·∫≠p ph·∫ßn t·ª≠ h√†ng ${i + 1} c·ªôt ${j + 1}:`));
                arr[i].push(num);
            }
        }
        alert(`M·∫£ng 2 chi·ªÅu ƒë√£ nh·∫≠p:\n${arr.map(row => `[${row.join(", ")}]`).join("\n")}`);
        break;
    }
    case 2:
    {
        alert(`M·∫£ng 2 chi·ªÅu:\n${arr.length ?arr.map(row => `[${row.join(", ")}]`).join("\n") : "M·∫£ng tr·ªëng"}`);
        break;
    }
    case 3:
    {
        if (arr.length === 0) {
            alert("M·∫£ng tr·ªëng!");
            break;
        }
        let sum = 0;
        for (let row of arr) {
            for (let num of row) {
                sum += num;
            }
        }
        alert(`T·ªïng c√°c ph·∫ßn t·ª≠ trong m·∫£ng: ${sum}`);
        break;
    }
    case 4:
    {
        if (arr.length === 0) {
            alert("M·∫£ng tr·ªëng!");
            break;
        }
        let max = arr[0][0];
        let index = [0, 0];
        for (let i = 0; i < arr.length; i++) {
            for (let j = 0; j < arr[i].length; j++) {
                if (arr[i][j] > max) {
                    max = arr[i][j];
                    index = [i, j];
                }
            }
        }
        alert(`Ph·∫ßn t·ª≠ l·ªõn nh·∫•t trong m·∫£ng: ${max}\nCh·ªâ s·ªë c·ªßa n√≥: h√†ng ${index[0] + 1}, c·ªôt ${index[1] + 1}`);
        break;
    }
    case 5:
    {
        if (arr.length === 0) {
            alert("M·∫£ng tr·ªëng!");
            break;
        }
        let row = parseInt(prompt(`Nh·∫≠p h√†ng c·∫ßn t√≠nh trung b√¨nh c·ªông (1 - ${arr.length}):`));
        if (isNaN(row) || row < 1 || row > arr.length) {
            alert("H√†ng kh√¥ng h·ª£p l·ªá!");
            break;
        }
        let sum = 0;
        for (let num of arr[row - 1]) {
            sum += num;
        }
        let avg = sum / arr[row - 1].length;
        alert(`Trung b√¨nh c·ªông c√°c ph·∫ßn t·ª≠ c·ªßa h√†ng ${row}: ${avg}`);
        break;
    }
    case 6:
    {
        if (arr.length === 0) {
            alert("M·∫£ng tr·ªëng!");
            break;
        }
        for (let row of arr) {
            row.reverse();
        }
        alert(`M·∫£ng sau khi ƒë·∫£o ng∆∞·ª£c c√°c h√†ng:\n${arr.map(row => `[${row.join(", ")}]`).join("\n")}`);
        break;
    }
    case 7:
    {
        alert("T·∫°m bi·ªát!");
        break;
    }
    default:
    {
        alert("L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!");
        break; 
    }
}
    
}while(choice !== 7);